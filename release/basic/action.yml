name: Create a basic Release
description: Create a custom Release in the GitHub repository, with Git tags management and pre-releases support
author: Antoine Milochau
inputs:
  versionMajor:
    description: The major version - must be changed when you make incompatible API changes
    required: true
  versionMinor:
    description: The minor version - must be changed when you add functionality in a backward compatible manner
    required: true
  versionPatch:
    description: The patch version - must be changed when you make backwards compatible bug fixes
    required: true
  versionUnstableSuffix:
    description: The unstable suffix version - must be added when you want to create a pre-release
    required: false
    default: ''
  avoidGitHubPrerelease:
    description: Disable GitHub Release creation for unstable version
    required: false
    default: false
  githubToken:
    description: The GitHub token, typically get from secrets.GITHUB_TOKEN
    required: true
  mainBranch:
    description: The name of the main branch
    default: 'refs/heads/main'
    required: false
  verbosity:
    description: The verbosity of the scripts
    default: minimal
    options:
    - minimal
    - normal
    - detailed
outputs:
  versionLong:
    description: The long version as defined in the long Git tag
    value: ${{ steps.release.outputs.versionLong }}
  versionShort:
    description: The short version as defined in the short Git tag
    value: ${{ steps.release.outputs.versionShort }}
  versionPrerelease:
    description: If the version is recognized as a prerelease
    value: ${{ steps.release.outputs.versionPrerelease }}
runs:
  using: composite
  steps:
    - name: Release with script
      id: release
      shell: pwsh
      run: ${{ github.action_path }}/release-basic.ps1 `
        -versionMajor ${{ inputs.versionMajor }} `
        -versionMinor ${{ inputs.versionMinor }} `
        -versionPatch ${{ inputs.versionPatch }} `
        -versionUnstableSuffix "${{ inputs.versionUnstableSuffix }}" `
        -mainBranch ${{ inputs.mainBranch }} `
        -currentBranch ${{ github.ref }} `
        -githubToken ${{ inputs.githubToken }} `
        -avoidGithubPrerelease ${{ inputs.avoidGitHubPrerelease }} `
        -verbosity ${{ inputs.verbosity }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
