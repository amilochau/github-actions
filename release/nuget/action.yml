name: Release NuGet packages
description: Package, publish and release .NET libraries as NuGet packages into GitHub Packages and nuget.org
author: Antoine Milochau
inputs:
  versionFile:
    description: The path to the file where the version can be found - must be an XML file
    required: true
  projectsToBuild:
    description: The path to the projects to build - can be a .csproj or a .sln file
    required: true
  projectsToPublish:
    description: The path to the projects to publish - can be a .csproj or a .sln file
    required: true
  avoidGitHubPrerelease:
    description: Disable GitHub Release creation for unstable version
    required: false
    default: true
  generateReleaseNotes:
    description: Generate automatic release notes
    required: false
    default: false
  githubToken:
    description: The GitHub token, typically get from secrets.GITHUB_TOKEN
    required: true
  mainBranch:
    description: The name of the main branch
    default: 'refs/heads/main'
    required: false
  nugetOrgToken:
    description: The nuget.org token, typically get from a secret; used to publish projects to nuget.org
    default: ''
    required: false
  verbosity:
    description: The verbosity of the dotnet CLI
    default: minimal
outputs:
  versionNumber:
    description: The version as defined in the Git tag
    value: ${{ steps.release.outputs.versionNumber }}
  versionPrerelease:
    description: If the version is recognized as a prerelease
    value: ${{ steps.release.outputs.versionPrerelease }}
runs:
  using: composite
  steps:
    - name: Release npm with script
      id: release
      shell: pwsh
      run: ${{ github.action_path }}/release-nuget.ps1 `
        -versionFile ${{ inputs.versionFile }} `
        -mainBranch ${{ inputs.mainBranch }} `
        -currentBranch ${{ github.ref }} `
        -projectsToBuild ${{ inputs.projectsToBuild }} `
        -projectsToPublish ${{ inputs.projectsToPublish }} `
        -verbosity ${{ inputs.verbosity }} `
        -nugetOrgToken ${{ inputs.nugetOrgToken }} `
        -githubToken ${{ inputs.githubToken }} `
        -avoidGithubPrerelease ${{ inputs.avoidGitHubPrerelease }} `
        -generateReleaseNotes ${{ inputs.generateReleaseNotes }}
      working-directory: ${{ inputs.projectWorkspace }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
