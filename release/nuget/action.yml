name: Release NuGet packages
description: Package, publish and release .NET libraries as NuGet packages into GitHub Packages and nuget.org
author: Antoine Milochau
inputs:
  versionFile:
    description: The path to the file where the version can be found - must be an XML file
    required: true
  projectsToBuild:
    description: The path to the projects to build - can be a .csproj or a .sln file
    required: true
  projectsToPublish:
    description: The path to the projects to publish - can be a .csproj or a .sln file
    required: true
  dotnetVersion:
    description: The .NET version to use
    default: ''
  avoidGitHubPrerelease:
    description: Disable GitHub Release creation for unstable version
    required: false
    default: true
  nugetOrgToken:
    description: The nuget.org token, typically get from a secret; used to publish projects to nuget.org
    default: ''
    required: false
  verbosity:
    description: The verbosity of the scripts
    default: minimal
    options:
    - minimal
    - normal
    - detailed
outputs:
  versionNumber:
    description: The version as defined in the Git tag
    value: ${{ steps.release.outputs.versionNumber }}
  versionPrerelease:
    description: If the version is recognized as a prerelease
    value: ${{ steps.release.outputs.versionPrerelease }}
runs:
  using: composite
  steps:
    - name: Setup .NET Core
      if: ${{ inputs.dotnetVersion != '' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnetVersion }}
    - name: Release NuGet with script
      id: release
      shell: pwsh
      run: ${{ github.action_path }}/release-nuget.ps1 `
        -versionFile ${{ inputs.versionFile }} `
        -currentBranch ${{ github.ref }} `
        -projectsToBuild ${{ inputs.projectsToBuild }} `
        -projectsToPublish ${{ inputs.projectsToPublish }} `
        -nugetOrgToken "${{ inputs.nugetOrgToken }}" `
        -avoidGithubPrerelease ${{ inputs.avoidGitHubPrerelease }} `
        -githubOrganization ${{ github.repository_owner }} `
        -verbosity ${{ inputs.verbosity }}
      working-directory: ${{ inputs.projectWorkspace }}
