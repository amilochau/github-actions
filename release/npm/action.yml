name: Release npm packages
description: Package, publish and release Node.js libraries as npm packages into npmjs.com
author: Antoine Milochau
inputs:
  projectWorkspace:
    description: The path to the project workspace
    default: '.'
  nodeVersion:
    description: The Node.js version to use
    default: 20.x
  npmBuildCommand:
    description: The npm command to run, to build the application
    default: 'build --if-present'
  npmPublishCommand:
    description: The npm command to run, to publish the application
    default: 'publish'
  createGithubPrerelease:
    description: Create GitHub Release for unstable version
    default: false
  npmjsComToken:
    description: The npmjs.com token, typically get from a secret; used to publish projects to npmjs.com
    required: true
  verbosity:
    description: The verbosity of the scripts
    default: quiet
    options:
    - quiet
    - minimal
    - normal
    - detailed
    - diagnostic
outputs:
  versionNumber:
    description: The version as defined in the Git tag
    value: ${{ steps.release.outputs.versionNumber }}
  versionPrerelease:
    description: If the version is recognized as a prerelease
    value: ${{ steps.release.outputs.versionPrerelease }}
runs:
  using: composite
  steps:
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.nodeVersion }}
        cache: 'npm'
        cache-dependency-path: "${{ inputs.projectWorkspace }}/package-lock.json"
    - name: Install packages
      shell: pwsh
      run: npm ci
      working-directory: ${{ inputs.projectWorkspace }}
    - name: Build application
      shell: pwsh
      run: npm run ${{ inputs.npmBuildCommand }}
      working-directory: ${{ inputs.projectWorkspace }}
    - name: Release npm with script
      id: release
      shell: pwsh
      run: ${{ github.action_path }}/release-npm.ps1 `
        -currentBranch ${{ github.ref }} `
        -createGithubPrerelease ${{ inputs.createGithubPrerelease }} `
        -verbosity ${{ inputs.verbosity }}
      working-directory: ${{ inputs.projectWorkspace }}
    - name: Publish npm
      shell: pwsh
      run: |
        npm set registry "https://registry.npmjs.org"
        npm set //registry.npmjs.org/:_authToken ${{ inputs.npmjsComToken }}
        npm ${{ inputs.npmPublishCommand }}
