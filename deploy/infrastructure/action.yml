name: Deploy Azure infrastructure
description: Deploy Azure infrastructure
author: Antoine Milochau
inputs:
  azureTemplateVersion:
    description: The version of 'azure-templates' to use
    required: true
  azureCredentials:
    description: Azure credentials, typically get from secrets.AZURE_CREDENTIALS
    required: true
  scope:
    description: Deployment scope
    type: choice
    options:
    - resourceGroup
    - subscription
    - managementGroup
    default: resourceGroup
  resourceGroupName:
    description: The name of the resource group where to deploy the infrastructure
    required: false
  resourceGroupLocation:
    description: The location of the resource group where to deploy the infrastructure
    required: false
  subscriptionId:
    description: The ID of the Azure subscription
    required: false
  subscriptionRegion:
    description: The region of the Azure subscription
    required: false
  managementGroupId:
    description: The ID of the Azure management group
    required: false
  managementGroupRegion:
    description: The region of the Azure management group
    required: false
  templateFilePath:
    description: The path of the infrastructure template to deploy
    required: true
  parametersFilePath:
    description: The path of the parameters files to use during deployment
    required: true
outputs:
  resourceId:
    description: "ID of the main deployed resource"
    value: ${{ steps.deploy_infra_step_rg.outputs.resourceId }}
  resourceName:
    description: "Name of the main deployed resource"
    value: ${{ steps.deploy_infra_step_rg.outputs.resourceName }}
runs:
  using: composite
  steps:
    - uses: actions/checkout@v2 # For template file
      with:
        repository: amilochau/azure-templates
        ref: ${{ inputs.azureTemplateVersion }}
        path: templates
        fetch-depth: 0
    - name: Login on Azure
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azureCredentials }}
    - name: Determine template version
      if: ${{ inputs.scope == 'resourceGroup' }}
      id: format-versions
      shell: bash
      run: |
        templateVersion=$(git describe --tags --match v*.*.*)
        echo Template version is $templateVersion
        echo "::set-output name=templateVersion::$templateVersion"
      working-directory: templates
    - name: Create Azure Resource Group
      if: ${{ inputs.scope == 'resourceGroup' }}
      shell: pwsh
      run: |
        echo 'Checking if the resource group must be created...'
        if ((az group exists --name ${{ inputs.resourceGroupName }}) -eq 'false') {
          echo 'Creating the resource group...'
          az group create `
            --name ${{ inputs.resourceGroupName }} `
            --location ${{ inputs.resourceGroupLocation }}
          echo 'Resource group has been be created.'
        }
    - name: Detach Static Web Apps
      if: ${{ inputs.scope == 'resourceGroup' }}
      shell: pwsh
      run: |
        echo 'Checking if Static Web Apps must be disconnected...'
        az staticwebapp list --resource-group ${{ inputs.resourceGroupName }} | ConvertFrom-Json | ForEach-Object {
          echo "Disconnecting $($_.name)..."
          az staticwebapp disconnect --name $_.name
          echo "$($_.name) has been disconnected."
        }
    - name: Deploy infrastructure to Azure
      if: ${{ inputs.scope == 'resourceGroup' }}
      id: deploy_infra_step_rg
      uses: azure/arm-deploy@v1
      with:
        scope: 'resourcegroup'
        resourceGroupName: ${{ inputs.resourceGroupName }}
        template: ${{ inputs.templateFilePath }}
        parameters: '${{ inputs.parametersFilePath }} templateVersion=${{ steps.format-versions.outputs.templateVersion }}'
        deploymentName: 'Deployment-GitHub'
        failOnStdErr: false
    - name: Deploy infrastructure to Azure
      if: ${{ inputs.scope == 'subscription' }}
      id: deploy_infra_step_sub
      uses: azure/arm-deploy@v1
      with:
        scope: 'subscription'
        subscriptionId: ${{ inputs.subscriptionId }}
        region: ${{ inputs.subscriptionRegion }}
        template: ${{ inputs.templateFilePath }}
        parameters: ${{ inputs.parametersFilePath }}
        deploymentName: 'Deployment-GitHub'
        failOnStdErr: false
    - name: Deploy infrastructure to Azure
      if: ${{ inputs.scope == 'managementGroup' }}
      id: deploy_infra_step_mg
      uses: azure/arm-deploy@v1
      with:
        scope: 'managementgroup'
        managementGroupId: ${{ inputs.managementGroupId }}
        region: ${{ inputs.managementGroupRegion }}
        template: ${{ inputs.templateFilePath }}
        parameters: ${{ inputs.parametersFilePath }}
        deploymentName: 'Deployment-GitHub'
        failOnStdErr: false
